version: "3.7"

services:
  portainer:
    image: portainer/portainer:1.23.1
    networks:
      - front
      - portainer
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    labels:
      - traefik.enable=true

      ## portainer-ratelimit
      - traefik.http.middlewares.portainer-ratelimit.ratelimit.average=20
      - traefik.http.middlewares.portainer-ratelimit.ratelimit.burst=1
      - traefik.http.middlewares.portainer-ratelimit.ratelimit.sourcecriterion.requesthost=true

      # http
      - traefik.http.routers.portainer.rule=Host(`portainer.condensat.space`)
      - traefik.http.routers.portainer.entrypoints=web
      - traefik.http.routers.portainer.service=portainer
      ## https-redirect
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true    
      - traefik.http.routers.portainer.middlewares=https-redirect

      # tls
      - traefik.http.routers.portainer-ssl.tls=true
      - traefik.http.routers.portainer-ssl.tls.certResolver=le-ssl
      - traefik.http.routers.portainer-ssl.rule=Host(`portainer.condensat.space`)
      - traefik.http.routers.portainer-ssl.entrypoints=websecure
      - traefik.http.routers.portainer-ssl.service=portainer-ssl
      - traefik.http.services.portainer-ssl.loadBalancer.server.port=9000

  agent:
    image: portainer/agent:1.5.1
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
    networks:
      - portainer

volumes:
  portainer_data: {}
      
networks:
  front:
    external: true
  portainer:
    driver: overlay
    name: portainer
